{
	"kind": "Listing",
	"data": {
		"after": "t3_1nfe3vj",
		"dist": 27,
		"modhash": "dmbuhpcqdnffe2a3ad9ae1551619cccad47bcb936ed5f48468",
		"geo_filter": null,
		"children": [
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "Did you find or create something cool this week in javascript?       \n\nShow us here!",
					"author_fullname": "t2_6l4z3",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "Showoff Saturday (September 13, 2025)",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": "showoff",
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nfqu58",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.5,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 0,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": "Showoff Saturday",
					"can_mod_post": false,
					"score": 0,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": true,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": true,
					"mod_note": null,
					"created": 1757746850.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "self.javascript",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Did you find or create something cool this week in javascript?       &lt;/p&gt;\n\n&lt;p&gt;Show us here!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": "new",
					"banned_at_utc": null,
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"link_flair_template_id": "7ce01c34-a66f-11e5-b9ea-0ebd457aa827",
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "#d3d6da",
					"id": "1nfqu58",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "AutoModerator",
					"discussion_type": null,
					"num_comments": 1,
					"send_replies": false,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nfqu58/showoff_saturday_september_13_2025/",
					"stickied": true,
					"url": "https://www.reddit.com/r/javascript/comments/1nfqu58/showoff_saturday_september_13_2025/",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757746850.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "**Monday, September 08 - Sunday, September 14, 2025**\n\n###Top Posts\n\n| score | comments | title &amp; link |\n|--|--|--|\n| 94  | [52 comments](/r/javascript/comments/1nfid0i/we_are_building_a_fully_peertopeer_selfhosted/)  | [We are building a fully peer-to-peer selfhosted 4chan alternative using javascript and ipfs, looking for honest review and feed back](https://github.com/plebbit/plebchan)|\n| 91  | [20 comments](/r/javascript/comments/1nefcw8/we_forked_styledcomponents_because_it_never/)  | [We forked styled-components because it never implemented React 18's performance APIs. 40% faster for Linear, zero code changes needed.](https://github.com/sanity-io/styled-components-last-resort)|\n| 77  | [14 comments](/r/javascript/comments/1nbp3c4/npm_package_errorex_just_got_published_with/)  | [NPM package \"error-ex\" just got published with malware &amp;#40;47m downloads&amp;#41;](https://jdstaerk.substack.com/p/we-just-found-malicious-code-in-the)|\n| 26  | [10 comments](/r/javascript/comments/1ncklq1/color_npm_package_compromised/)  | [color npm package compromised](https://fasterthanli.me/articles/color-npm-package-compromised)|\n| 21  | [3 comments](/r/javascript/comments/1nbiroz/your_rjavascript_recap_for_the_week_of_september/)  | `[Subreddit Stats]` Your /r/javascript recap for the week of September 01 - September 07, 2025|\n| 10  | [4 comments](/r/javascript/comments/1ng9fwq/a_simple_but_fun_riskish_game/)  | [A simple but fun Risk-ish game](https://github.com/JPDeerenberg/SquareLords)|\n| 7  | [0 comments](/r/javascript/comments/1nbnl5w/true_endtoend_type_safety_across_your_entire/)  | [True End-to-End Type Safety Across Your Entire TypeScript Stack](https://rowsana.substack.com/p/end-to-end-type-safety-in-typescript)|\n| 6  | [2 comments](/r/javascript/comments/1nbt6ef/higherorder_transform_streams_sequentially/)  | [Higher-Order Transform Streams: Sequentially Injecting Streams Within Streams](https://www.timetler.com/2025/08/23/parallel-recursive-streaming-ai-swarms/)|\n| 5  | [0 comments](/r/javascript/comments/1nfftwm/eslint_airbnb_extended_alternative_of_eslint/)  | [ESLint Airbnb Extended - Alternative of Eslint Config Airbnb &amp;#40; Base + React + Typescript &amp;#41;](https://eslint-airbnb-extended.nishargshah.dev)|\n| 5  | [18 comments](/r/javascript/comments/1nd9rsf/askjs_what_is_a_good_blogging_cms_jsbased/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; What is a good blogging CMS js-based?|\n\n\n&amp;nbsp;\n\n###Most Commented Posts\n\n| score | comments | title &amp; link |\n|--|--|--|\n| 0  | [33 comments](/r/javascript/comments/1ncfeic/askjs_most_frontend_frameworks_are_overkill_for/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Most frontend frameworks are overkill for 80% of web apps|\n| 2  | [30 comments](/r/javascript/comments/1ndx424/preventing_the_npm_debugchalk_compromise_in_200/)  | [Preventing the npm Debug/Chalk Compromise in 200 lines of Javascript](https://getvouchsafe.org/blog/2025-09-10.html)|\n| 0  | [22 comments](/r/javascript/comments/1netnn6/askjs_should_take_the_pay_or_keep_my_code/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Should take the pay, or keep my code?|\n| 0  | [16 comments](/r/javascript/comments/1ne2is4/askjs_check_text_against_a_list_of_strings/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Check text against a list of strings|\n| 0  | [16 comments](/r/javascript/comments/1ncc9zu/askjs_why_isnt_it_more_common_to_create/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Why isn't it more common to create cross-platform and portable applications and software using web technologies like JS, HTML and CSS ?|\n\n\n&amp;nbsp;\n\n###Top Ask JS\n\n| score | comments | title &amp; link |\n|--|--|--|\n| 3  | [2 comments](/r/javascript/comments/1nbtxfg/askjs_count_lines_for_a_contenteditable_div/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Count lines for a contenteditable div?|\n| 1  | [2 comments](/r/javascript/comments/1nevyr9/askjs_boosting_seo_with_structured_data_jsonld/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Boosting SEO with Structured Data, JSON-LD, and Proper Headings|\n| 0  | [4 comments](/r/javascript/comments/1ng3jvx/askjs_has_anyone_out_here_built_an_extension/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Has anyone out here built an Extension?|\n\n\n&amp;nbsp;\n\n###Top Showoffs\n\n| score  |  comment  |\n|--|--|\n| 1  |  /u/Skriblos said [Me and a friend's js13k entry. Pure js, html, css.](/r/javascript/comments/1nfqu58/showoff_saturday_september_13_2025/ne17rgd/?context=5) |\n\n\n&amp;nbsp;\n\n###Top Comments\n\n| score  |  comment  |\n|--|--|\n| 84  |  /u/MegagramEnjoyer said [Didn't think we needed another troll filled alt right cesspit. I guess I was wrong](/r/javascript/comments/1nfid0i/we_are_building_a_fully_peertopeer_selfhosted/ndwstkq/?context=5) |\n| 44  |  /u/Mestyo said [I guess we're far enough into the future to have effectively forgotten how messy imperative JS DOM manipulation apps can be, how frustrating cache busting can be of static &amp;#40;non-bundled&amp;#41; assets...](/r/javascript/comments/1ncfeic/askjs_most_frontend_frameworks_are_overkill_for/nd8tyli/?context=5) |\n| 35  |  /u/Ehdelveiss said [If the past 24 hours has taught me anything, its that we in fact need 100% less 4chan, not more.](/r/javascript/comments/1nfid0i/we_are_building_a_fully_peertopeer_selfhosted/ndx3tx1/?context=5) |\n| 30  |  /u/owengo1 said [and debug-js 4.4.2 also. debug-js comes with babel..](/r/javascript/comments/1nbp3c4/npm_package_errorex_just_got_published_with/nd3kahh/?context=5) |\n| 26  |  /u/Dependent-Guitar-473 said [This is a great job; however, this begs the question, what are you going to migrate to eventually? what is the best css-in-js solution atm?](/r/javascript/comments/1nefcw8/we_forked_styledcomponents_because_it_never/ndo8eqi/?context=5) |\n\n\n&amp;nbsp;",
					"author_fullname": "t2_ydo5x7u",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "Your /r/javascript recap for the week of September 08 - September 14, 2025",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nhgtbe",
					"quarantine": false,
					"link_flair_text_color": null,
					"upvote_ratio": 1.0,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 4,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": "Subreddit Stats",
					"can_mod_post": false,
					"score": 4,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": true,
					"mod_note": null,
					"created": 1757927100.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "self.javascript",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Monday, September 08 - Sunday, September 14, 2025&lt;/strong&gt;&lt;/p&gt;\n\n&lt;h3&gt;Top Posts&lt;/h3&gt;\n\n&lt;table&gt;&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;score&lt;/th&gt;\n&lt;th&gt;comments&lt;/th&gt;\n&lt;th&gt;title &amp;amp; link&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;94&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1nfid0i/we_are_building_a_fully_peertopeer_selfhosted/\"&gt;52 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"https://github.com/plebbit/plebchan\"&gt;We are building a fully peer-to-peer selfhosted 4chan alternative using javascript and ipfs, looking for honest review and feed back&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;91&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1nefcw8/we_forked_styledcomponents_because_it_never/\"&gt;20 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"https://github.com/sanity-io/styled-components-last-resort\"&gt;We forked styled-components because it never implemented React 18&amp;#39;s performance APIs. 40% faster for Linear, zero code changes needed.&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;77&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1nbp3c4/npm_package_errorex_just_got_published_with/\"&gt;14 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"https://jdstaerk.substack.com/p/we-just-found-malicious-code-in-the\"&gt;NPM package &amp;quot;error-ex&amp;quot; just got published with malware &amp;#40;47m downloads&amp;#41;&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;26&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1ncklq1/color_npm_package_compromised/\"&gt;10 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"https://fasterthanli.me/articles/color-npm-package-compromised\"&gt;color npm package compromised&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;21&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1nbiroz/your_rjavascript_recap_for_the_week_of_september/\"&gt;3 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;code&gt;[Subreddit Stats]&lt;/code&gt; Your &lt;a href=\"/r/javascript\"&gt;/r/javascript&lt;/a&gt; recap for the week of September 01 - September 07, 2025&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;10&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1ng9fwq/a_simple_but_fun_riskish_game/\"&gt;4 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"https://github.com/JPDeerenberg/SquareLords\"&gt;A simple but fun Risk-ish game&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;7&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1nbnl5w/true_endtoend_type_safety_across_your_entire/\"&gt;0 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"https://rowsana.substack.com/p/end-to-end-type-safety-in-typescript\"&gt;True End-to-End Type Safety Across Your Entire TypeScript Stack&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;6&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1nbt6ef/higherorder_transform_streams_sequentially/\"&gt;2 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"https://www.timetler.com/2025/08/23/parallel-recursive-streaming-ai-swarms/\"&gt;Higher-Order Transform Streams: Sequentially Injecting Streams Within Streams&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;5&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1nfftwm/eslint_airbnb_extended_alternative_of_eslint/\"&gt;0 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"https://eslint-airbnb-extended.nishargshah.dev\"&gt;ESLint Airbnb Extended - Alternative of Eslint Config Airbnb &amp;#40; Base + React + Typescript &amp;#41;&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;5&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1nd9rsf/askjs_what_is_a_good_blogging_cms_jsbased/\"&gt;18 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;code&gt;[AskJS]&lt;/code&gt; &amp;#91;AskJS&amp;#93; What is a good blogging CMS js-based?&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;&lt;/table&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;h3&gt;Most Commented Posts&lt;/h3&gt;\n\n&lt;table&gt;&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;score&lt;/th&gt;\n&lt;th&gt;comments&lt;/th&gt;\n&lt;th&gt;title &amp;amp; link&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;0&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1ncfeic/askjs_most_frontend_frameworks_are_overkill_for/\"&gt;33 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;code&gt;[AskJS]&lt;/code&gt; &amp;#91;AskJS&amp;#93; Most frontend frameworks are overkill for 80% of web apps&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;2&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1ndx424/preventing_the_npm_debugchalk_compromise_in_200/\"&gt;30 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"https://getvouchsafe.org/blog/2025-09-10.html\"&gt;Preventing the npm Debug/Chalk Compromise in 200 lines of Javascript&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1netnn6/askjs_should_take_the_pay_or_keep_my_code/\"&gt;22 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;code&gt;[AskJS]&lt;/code&gt; &amp;#91;AskJS&amp;#93; Should take the pay, or keep my code?&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1ne2is4/askjs_check_text_against_a_list_of_strings/\"&gt;16 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;code&gt;[AskJS]&lt;/code&gt; &amp;#91;AskJS&amp;#93; Check text against a list of strings&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1ncc9zu/askjs_why_isnt_it_more_common_to_create/\"&gt;16 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;code&gt;[AskJS]&lt;/code&gt; &amp;#91;AskJS&amp;#93; Why isn&amp;#39;t it more common to create cross-platform and portable applications and software using web technologies like JS, HTML and CSS ?&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;&lt;/table&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;h3&gt;Top Ask JS&lt;/h3&gt;\n\n&lt;table&gt;&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;score&lt;/th&gt;\n&lt;th&gt;comments&lt;/th&gt;\n&lt;th&gt;title &amp;amp; link&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;3&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1nbtxfg/askjs_count_lines_for_a_contenteditable_div/\"&gt;2 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;code&gt;[AskJS]&lt;/code&gt; &amp;#91;AskJS&amp;#93; Count lines for a contenteditable div?&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;1&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1nevyr9/askjs_boosting_seo_with_structured_data_jsonld/\"&gt;2 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;code&gt;[AskJS]&lt;/code&gt; &amp;#91;AskJS&amp;#93; Boosting SEO with Structured Data, JSON-LD, and Proper Headings&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/r/javascript/comments/1ng3jvx/askjs_has_anyone_out_here_built_an_extension/\"&gt;4 comments&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;code&gt;[AskJS]&lt;/code&gt; &amp;#91;AskJS&amp;#93; Has anyone out here built an Extension?&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;&lt;/table&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;h3&gt;Top Showoffs&lt;/h3&gt;\n\n&lt;table&gt;&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;score&lt;/th&gt;\n&lt;th&gt;comment&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;1&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/u/Skriblos\"&gt;/u/Skriblos&lt;/a&gt; said &lt;a href=\"/r/javascript/comments/1nfqu58/showoff_saturday_september_13_2025/ne17rgd/?context=5\"&gt;Me and a friend&amp;#39;s js13k entry. Pure js, html, css.&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;&lt;/table&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;h3&gt;Top Comments&lt;/h3&gt;\n\n&lt;table&gt;&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;score&lt;/th&gt;\n&lt;th&gt;comment&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;84&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/u/MegagramEnjoyer\"&gt;/u/MegagramEnjoyer&lt;/a&gt; said &lt;a href=\"/r/javascript/comments/1nfid0i/we_are_building_a_fully_peertopeer_selfhosted/ndwstkq/?context=5\"&gt;Didn&amp;#39;t think we needed another troll filled alt right cesspit. I guess I was wrong&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;44&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/u/Mestyo\"&gt;/u/Mestyo&lt;/a&gt; said &lt;a href=\"/r/javascript/comments/1ncfeic/askjs_most_frontend_frameworks_are_overkill_for/nd8tyli/?context=5\"&gt;I guess we&amp;#39;re far enough into the future to have effectively forgotten how messy imperative JS DOM manipulation apps can be, how frustrating cache busting can be of static &amp;#40;non-bundled&amp;#41; assets...&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;35&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/u/Ehdelveiss\"&gt;/u/Ehdelveiss&lt;/a&gt; said &lt;a href=\"/r/javascript/comments/1nfid0i/we_are_building_a_fully_peertopeer_selfhosted/ndx3tx1/?context=5\"&gt;If the past 24 hours has taught me anything, its that we in fact need 100% less 4chan, not more.&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;30&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/u/owengo1\"&gt;/u/owengo1&lt;/a&gt; said &lt;a href=\"/r/javascript/comments/1nbp3c4/npm_package_errorex_just_got_published_with/nd3kahh/?context=5\"&gt;and debug-js 4.4.2 also. debug-js comes with babel..&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;26&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"/u/Dependent-Guitar-473\"&gt;/u/Dependent-Guitar-473&lt;/a&gt; said &lt;a href=\"/r/javascript/comments/1nefcw8/we_forked_styledcomponents_because_it_never/ndo8eqi/?context=5\"&gt;This is a great job; however, this begs the question, what are you going to migrate to eventually? what is the best css-in-js solution atm?&lt;/a&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;&lt;/table&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": null,
					"id": "1nhgtbe",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "subredditsummarybot",
					"discussion_type": null,
					"num_comments": 1,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nhgtbe/your_rjavascript_recap_for_the_week_of_september/",
					"stickied": true,
					"url": "https://www.reddit.com/r/javascript/comments/1nhgtbe/your_rjavascript_recap_for_the_week_of_september/",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757927100.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "",
					"author_fullname": "t2_d9szqzj",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "A benchmark of Tauri vs Electron for desktop apps",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": true,
					"name": "t3_1njbafr",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.91,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 8,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 8,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1758110776.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "gethopp.app",
					"allow_live_comments": false,
					"selftext_html": null,
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://gethopp.app/blog/tauri-vs-electron",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1njbafr",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "konsalexee",
					"discussion_type": null,
					"num_comments": 0,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1njbafr/a_benchmark_of_tauri_vs_electron_for_desktop_apps/",
					"stickied": false,
					"url": "https://gethopp.app/blog/tauri-vs-electron",
					"subreddit_subscribers": 2408514,
					"created_utc": 1758110776.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "",
					"author_fullname": "t2_ojqru",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "a second attack has hit npm, over 40 packages compromised.",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nifp98",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.98,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 639,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 639,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1758024682.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "stepsecurity.io",
					"allow_live_comments": false,
					"selftext_html": null,
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://www.stepsecurity.io/blog/ctrl-tinycolor-and-40-npm-packages-compromised",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1nifp98",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "SethVanity13",
					"discussion_type": null,
					"num_comments": 34,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nifp98/a_second_attack_has_hit_npm_over_40_packages/",
					"stickied": false,
					"url": "https://www.stepsecurity.io/blog/ctrl-tinycolor-and-40-npm-packages-compromised",
					"subreddit_subscribers": 2408514,
					"created_utc": 1758024682.0,
					"num_crossposts": 2,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "",
					"author_fullname": "t2_2wnbhbec",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "Introducing TypeBox 1.0: A Runtime Type System for JavaScript",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nj3b5k",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.86,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 15,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 15,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1758082462.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "github.com",
					"allow_live_comments": false,
					"selftext_html": null,
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://github.com/sinclairzx81/typebox",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1nj3b5k",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "sinclair_zx81",
					"discussion_type": null,
					"num_comments": 2,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nj3b5k/introducing_typebox_10_a_runtime_type_system_for/",
					"stickied": false,
					"url": "https://github.com/sinclairzx81/typebox",
					"subreddit_subscribers": 2408514,
					"created_utc": 1758082462.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "Hey /r/javascript,\n\nI wanted to share a write-up on an architectural pattern for managing state in complex, event-driven applications and get some feedback from the community here.\n\nA common problem in UI programming is that as an application's state becomes more complex, the work required to calculate updates can start to interfere with the responsiveness of the user interface. This often leads to dropped frames (jank) and a degraded user experience.\n\nThe linked article is a deep dive into an architecture designed to solve this by combining two well-known programming concepts in a specific way:\n\n**1. Concurrency:** The entire state model and all its related computations are moved off the main UI thread and into a separate worker thread. The UI thread is treated as a simple \"view layer\" whose only job is to render, based on minimal, batched messages it receives from the worker. This architecturally isolates the UI from the application's computational load.\n\n**2. Metaprogramming for Automatic Reactivity:** Instead of requiring developers to manually declare which parts of the state a UI component depends on (e.g., via dependency arrays or manual subscriptions), the system uses metaprogramming (specifically, JavaScript Proxies) to intercept property access at runtime. This allows the system to automatically build a precise dependency graph. When a piece of state changes, only the *exact* computations and UI components that depend on it are notified to update.\n\nThe article explores how these two ideas work together, using a real-world implementation as a case study.\n\nI'm curious to hear your thoughts on the pattern itself, beyond any specific language or framework:\n\n*   What are the trade-offs you see in a heavily concurrent UI architecture like this? (e.g., memory overhead, debugging complexity).\n*   How does this \"automatic dependency tracking\" via proxies compare to other reactive systems you've worked with (e.g., RxJS, or patterns in other languages)?\n*   Are there other domains outside of UI where this combination of concurrency and automatic reactivity could be particularly powerful?\n\nLooking forward to the discussion.",
					"author_fullname": "t2_3qyh8f26",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "Designing a State Manager for Performance: A Deep Dive into Hierarchical Reactivity",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nja94c",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.63,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 2,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 2,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1758107692.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "github.com",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey &lt;a href=\"/r/javascript\"&gt;/r/javascript&lt;/a&gt;,&lt;/p&gt;\n\n&lt;p&gt;I wanted to share a write-up on an architectural pattern for managing state in complex, event-driven applications and get some feedback from the community here.&lt;/p&gt;\n\n&lt;p&gt;A common problem in UI programming is that as an application&amp;#39;s state becomes more complex, the work required to calculate updates can start to interfere with the responsiveness of the user interface. This often leads to dropped frames (jank) and a degraded user experience.&lt;/p&gt;\n\n&lt;p&gt;The linked article is a deep dive into an architecture designed to solve this by combining two well-known programming concepts in a specific way:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;1. Concurrency:&lt;/strong&gt; The entire state model and all its related computations are moved off the main UI thread and into a separate worker thread. The UI thread is treated as a simple &amp;quot;view layer&amp;quot; whose only job is to render, based on minimal, batched messages it receives from the worker. This architecturally isolates the UI from the application&amp;#39;s computational load.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;2. Metaprogramming for Automatic Reactivity:&lt;/strong&gt; Instead of requiring developers to manually declare which parts of the state a UI component depends on (e.g., via dependency arrays or manual subscriptions), the system uses metaprogramming (specifically, JavaScript Proxies) to intercept property access at runtime. This allows the system to automatically build a precise dependency graph. When a piece of state changes, only the &lt;em&gt;exact&lt;/em&gt; computations and UI components that depend on it are notified to update.&lt;/p&gt;\n\n&lt;p&gt;The article explores how these two ideas work together, using a real-world implementation as a case study.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m curious to hear your thoughts on the pattern itself, beyond any specific language or framework:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;  What are the trade-offs you see in a heavily concurrent UI architecture like this? (e.g., memory overhead, debugging complexity).&lt;/li&gt;\n&lt;li&gt;  How does this &amp;quot;automatic dependency tracking&amp;quot; via proxies compare to other reactive systems you&amp;#39;ve worked with (e.g., RxJS, or patterns in other languages)?&lt;/li&gt;\n&lt;li&gt;  Are there other domains outside of UI where this combination of concurrency and automatic reactivity could be particularly powerful?&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Looking forward to the discussion.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://github.com/neomjs/neo/blob/dev/learn/blog/v10-deep-dive-state-provider.md",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1nja94c",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "TobiasUhlig",
					"discussion_type": null,
					"num_comments": 1,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nja94c/designing_a_state_manager_for_performance_a_deep/",
					"stickied": false,
					"url": "https://github.com/neomjs/neo/blob/dev/learn/blog/v10-deep-dive-state-provider.md",
					"subreddit_subscribers": 2408514,
					"created_utc": 1758107692.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "I\u2019m a JavaScript developer exploring certifications, and I\u2019m wondering \u2014 is there a certification in the JavaScript/web ecosystem that carries the same weight and recognition as the\u00a0**OCP Java SE**\u00a0does for Java developers?\n\nThe OCP is often seen as a gold standard for validating skills and setting developers apart in the job market.\n\nI came across the\u00a0**CIW: JavaScript Specialist**\u00a0certification, but I\u2019m not sure if it\u2019s considered a strong industry standard.\u00a0\n\nAre there any JavaScript (or broader frontend/web) certifications that are equally respected and valued by employers?\n\nWould love to hear your recommendations, experiences, or even whether you feel certifications matter less in JS compared to proven project work.\n\nThanks in advance!",
					"author_fullname": "t2_69dmkszv",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "[AskJS] What JavaScript certification is equivalent to OCP Java SE?",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": "AskJS",
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nj7vdw",
					"quarantine": false,
					"link_flair_text_color": null,
					"upvote_ratio": 0.13,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 0,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": "AskJS",
					"can_mod_post": false,
					"score": 0,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": true,
					"mod_note": null,
					"created": 1758099196.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "self.javascript",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I\u2019m a JavaScript developer exploring certifications, and I\u2019m wondering \u2014 is there a certification in the JavaScript/web ecosystem that carries the same weight and recognition as the\u00a0&lt;strong&gt;OCP Java SE&lt;/strong&gt;\u00a0does for Java developers?&lt;/p&gt;\n\n&lt;p&gt;The OCP is often seen as a gold standard for validating skills and setting developers apart in the job market.&lt;/p&gt;\n\n&lt;p&gt;I came across the\u00a0&lt;strong&gt;CIW: JavaScript Specialist&lt;/strong&gt;\u00a0certification, but I\u2019m not sure if it\u2019s considered a strong industry standard.\u00a0&lt;/p&gt;\n\n&lt;p&gt;Are there any JavaScript (or broader frontend/web) certifications that are equally respected and valued by employers?&lt;/p&gt;\n\n&lt;p&gt;Would love to hear your recommendations, experiences, or even whether you feel certifications matter less in JS compared to proven project work.&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": null,
					"id": "1nj7vdw",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "mredul-hasan",
					"discussion_type": null,
					"num_comments": 3,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nj7vdw/askjs_what_javascript_certification_is_equivalent/",
					"stickied": false,
					"url": "https://www.reddit.com/r/javascript/comments/1nj7vdw/askjs_what_javascript_certification_is_equivalent/",
					"subreddit_subscribers": 2408514,
					"created_utc": 1758099196.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "Spread the love for open source with [\\#Hacktoberfest](https://x.com/hashtag/Hacktoberfest?src=hashtag_click), a month-long celebration of open-source projects, their maintainers, and the entire community of contributors.",
					"author_fullname": "t2_11aemt",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "Hacktoberfest 2025",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nigk5z",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.88,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 6,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 6,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1758026991.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "hacktoberfest.com",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Spread the love for open source with &lt;a href=\"https://x.com/hashtag/Hacktoberfest?src=hashtag_click\"&gt;#Hacktoberfest&lt;/a&gt;, a month-long celebration of open-source projects, their maintainers, and the entire community of contributors.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://hacktoberfest.com",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1nigk5z",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "zeluizr",
					"discussion_type": null,
					"num_comments": 0,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nigk5z/hacktoberfest_2025/",
					"stickied": false,
					"url": "https://hacktoberfest.com",
					"subreddit_subscribers": 2408514,
					"created_utc": 1758026991.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "",
					"author_fullname": "t2_109xnk",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "eslint-plugin-panda \u2013 a 4x faster ESLint plugin for Panda CSS",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nid7id",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 1.0,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 3,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 3,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1758016634.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "github.com",
					"allow_live_comments": false,
					"selftext_html": null,
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://github.com/gajus/eslint-plugin-panda",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1nid7id",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "gajus0",
					"discussion_type": null,
					"num_comments": 2,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nid7id/eslintpluginpanda_a_4x_faster_eslint_plugin_for/",
					"stickied": false,
					"url": "https://github.com/gajus/eslint-plugin-panda",
					"subreddit_subscribers": 2408514,
					"created_utc": 1758016634.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "Fast sites win. We've shared our frontend performance checklist successfully in July, but this one had to be the first article in a series. Hope you'll find it useful.",
					"author_fullname": "t2_eej3e",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "Frontend Performance Measuring, KPIs, and Monitoring",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nijxl7",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.33,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 0,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 0,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1758034906.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "crystallize.com",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Fast sites win. We&amp;#39;ve shared our frontend performance checklist successfully in July, but this one had to be the first article in a series. Hope you&amp;#39;ll find it useful.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://crystallize.com/blog/frontend-performance-measuring-and-kpis?utm_medium=social&amp;utm_source=Reddit",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1nijxl7",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "ainu011",
					"discussion_type": null,
					"num_comments": 0,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nijxl7/frontend_performance_measuring_kpis_and_monitoring/",
					"stickied": false,
					"url": "https://crystallize.com/blog/frontend-performance-measuring-and-kpis?utm_medium=social&amp;utm_source=Reddit",
					"subreddit_subscribers": 2408514,
					"created_utc": 1758034906.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "Just wrapped the first release after couple of months of iterative dialogue driven development using Google Gemini. The result:\n\nGingee: A complete, secure, multi-database Node.js application server, co-authored with Google Gemini",
					"author_fullname": "t2_1xw49cskjd",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "Gingee - A GenAI Authored Javascript App Server",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nior2u",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.22,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 0,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 0,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1758045540.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "github.com",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Just wrapped the first release after couple of months of iterative dialogue driven development using Google Gemini. The result:&lt;/p&gt;\n\n&lt;p&gt;Gingee: A complete, secure, multi-database Node.js application server, co-authored with Google Gemini&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://github.com/gingerhome/gingee",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1nior2u",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "gingeejs",
					"discussion_type": null,
					"num_comments": 0,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nior2u/gingee_a_genai_authored_javascript_app_server/",
					"stickied": false,
					"url": "https://github.com/gingerhome/gingee",
					"subreddit_subscribers": 2408514,
					"created_utc": 1758045540.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "I think this API has been caught in a weird time when we didn't have `class` yet, so creating new classes was kind of awkward and that felt like it was closer to the metal than doing this:\n\n    function MyClass() {\n      // Not actually a function, but a constructor\n    }\n    MyClass.prototype = new SuperClass();\n\nBut what uses does `Object.create` have in 2025? The only thing I can think of is to create objects *without* a prototype, i.e. objects where you don't have to worry about naming conflicts with native `Object.prototype` properties like `hasOwnProperty` or `valueOf`, for some reason. This way they can work as effective dictionaries (why not using `Map` then? Well `Map` isn't immediately serializable, for start).\n\nDo you have other use cases for `Object.create`?",
					"author_fullname": "t2_lz3or",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "[AskJS] Would you use Object.create today?",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": "AskJS",
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nhmu34",
					"quarantine": false,
					"link_flair_text_color": null,
					"upvote_ratio": 0.88,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 19,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": "AskJS",
					"can_mod_post": false,
					"score": 19,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": true,
					"mod_note": null,
					"created": 1757945242.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "self.javascript",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I think this API has been caught in a weird time when we didn&amp;#39;t have &lt;code&gt;class&lt;/code&gt; yet, so creating new classes was kind of awkward and that felt like it was closer to the metal than doing this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function MyClass() {\n  // Not actually a function, but a constructor\n}\nMyClass.prototype = new SuperClass();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But what uses does &lt;code&gt;Object.create&lt;/code&gt; have in 2025? The only thing I can think of is to create objects &lt;em&gt;without&lt;/em&gt; a prototype, i.e. objects where you don&amp;#39;t have to worry about naming conflicts with native &lt;code&gt;Object.prototype&lt;/code&gt; properties like &lt;code&gt;hasOwnProperty&lt;/code&gt; or &lt;code&gt;valueOf&lt;/code&gt;, for some reason. This way they can work as effective dictionaries (why not using &lt;code&gt;Map&lt;/code&gt; then? Well &lt;code&gt;Map&lt;/code&gt; isn&amp;#39;t immediately serializable, for start).&lt;/p&gt;\n\n&lt;p&gt;Do you have other use cases for &lt;code&gt;Object.create&lt;/code&gt;?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": null,
					"id": "1nhmu34",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "MaxArt2501",
					"discussion_type": null,
					"num_comments": 29,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nhmu34/askjs_would_you_use_objectcreate_today/",
					"stickied": false,
					"url": "https://www.reddit.com/r/javascript/comments/1nhmu34/askjs_would_you_use_objectcreate_today/",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757945242.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "Hey everyone,\n\nLately I've been digging deep into async JavaScript and noticed how tricky handling concurrency and race conditions still are, even with Promises, async/await, and tools like Promise.allSettled. Especially in real-world apps where you fetch multiple APIs or do parallel file/memory operations, keeping things efficient and error-proof gets complicated fast.\n\nSo my question is: what are some best practices or lesser-known patterns you rely on to manage concurrency control effectively in intermediate projects without adding too much complexity? Also, how are you balancing error handling and performance? Would love to hear specific patterns or libraries you\u2019ve found helpful in avoiding callback hell or unhandled promise rejections in those cases.\n\nThis has been a real pain point the last few months in my projects, and I\u2019m curious how others handle it beyond the basics.",
					"author_fullname": "t2_1v5sjqcho2",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "[AskJS] Struggling with async concurrency and race conditions in real projects\u2014What patterns or tips do you recommend for managing this cleanly?",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": "AskJS",
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nhhdml",
					"quarantine": false,
					"link_flair_text_color": null,
					"upvote_ratio": 0.86,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 5,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": "AskJS",
					"can_mod_post": false,
					"score": 5,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": true,
					"mod_note": null,
					"created": 1757929270.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "self.javascript",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey everyone,&lt;/p&gt;\n\n&lt;p&gt;Lately I&amp;#39;ve been digging deep into async JavaScript and noticed how tricky handling concurrency and race conditions still are, even with Promises, async/await, and tools like Promise.allSettled. Especially in real-world apps where you fetch multiple APIs or do parallel file/memory operations, keeping things efficient and error-proof gets complicated fast.&lt;/p&gt;\n\n&lt;p&gt;So my question is: what are some best practices or lesser-known patterns you rely on to manage concurrency control effectively in intermediate projects without adding too much complexity? Also, how are you balancing error handling and performance? Would love to hear specific patterns or libraries you\u2019ve found helpful in avoiding callback hell or unhandled promise rejections in those cases.&lt;/p&gt;\n\n&lt;p&gt;This has been a real pain point the last few months in my projects, and I\u2019m curious how others handle it beyond the basics.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": null,
					"id": "1nhhdml",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "Sansenbaker",
					"discussion_type": null,
					"num_comments": 27,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nhhdml/askjs_struggling_with_async_concurrency_and_race/",
					"stickied": false,
					"url": "https://www.reddit.com/r/javascript/comments/1nhhdml/askjs_struggling_with_async_concurrency_and_race/",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757929270.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "",
					"author_fullname": "t2_1uvzo7nhua",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "GitHub - pompelmi/pompelmi: free, open-source file scanner",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nht47q",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.21,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 0,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 0,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1757959223.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "github.com",
					"allow_live_comments": false,
					"selftext_html": null,
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://github.com/pompelmi/pompelmi",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1nht47q",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "JustSouochi",
					"discussion_type": null,
					"num_comments": 2,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nht47q/github_pompelmipompelmi_free_opensource_file/",
					"stickied": false,
					"url": "https://github.com/pompelmi/pompelmi",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757959223.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "I've just added this one, as it's been long overdue, and solutions that's out there were never that good.",
					"author_fullname": "t2_533wg0uy",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "Postgres Notification Listener for pg-promise",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1ngw04q",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.71,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 3,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 3,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1757867905.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "github.com",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve just added this one, as it&amp;#39;s been long overdue, and solutions that&amp;#39;s out there were never that good.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://github.com/vitaly-t/pg-listener",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1ngw04q",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "vitalytom",
					"discussion_type": null,
					"num_comments": 0,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1ngw04q/postgres_notification_listener_for_pgpromise/",
					"stickied": false,
					"url": "https://github.com/vitaly-t/pg-listener",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757867905.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "Hey everyone, to showcase how you can build real-time apps without a backend, I put together this full-featured chat starter. It has presence, persistence, typing indicators, etc. It's built with Vite and powered by a tool I'm working on called Vaultrice. Would love to get your feedback on the approach!",
					"author_fullname": "t2_1wyfqim68o",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "I built a free, open-source starter kit to create a real-time React chat app in minutes (no backend needed)",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nhggi6",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.13,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 0,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 0,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1757925687.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "github.com",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey everyone, to showcase how you can build real-time apps without a backend, I put together this full-featured chat starter. It has presence, persistence, typing indicators, etc. It&amp;#39;s built with Vite and powered by a tool I&amp;#39;m working on called Vaultrice. Would love to get your feedback on the approach!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://github.com/vaultrice/vaultrice-chat-starter",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1nhggi6",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "realtimeghost",
					"discussion_type": null,
					"num_comments": 16,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nhggi6/i_built_a_free_opensource_starter_kit_to_create_a/",
					"stickied": false,
					"url": "https://github.com/vaultrice/vaultrice-chat-starter",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757925687.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "I made a game in HTML, CSS and JavaScript called SquareLords. It's about a board with squares which you need to conquer. It's easy but strategic. I haven't coded a lot in JS, so anything that might help is always welcome. Thanks in advance! ",
					"author_fullname": "t2_1jf4tuoslx",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "A simple but fun Risk-ish game",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1ng9fwq",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.87,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 12,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 12,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1757799346.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "github.com",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I made a game in HTML, CSS and JavaScript called SquareLords. It&amp;#39;s about a board with squares which you need to conquer. It&amp;#39;s easy but strategic. I haven&amp;#39;t coded a lot in JS, so anything that might help is always welcome. Thanks in advance! &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://github.com/JPDeerenberg/SquareLords",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1ng9fwq",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "Used-Dragonfly-1616",
					"discussion_type": null,
					"num_comments": 8,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1ng9fwq/a_simple_but_fun_riskish_game/",
					"stickied": false,
					"url": "https://github.com/JPDeerenberg/SquareLords",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757799346.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "Right now most boards are whitelist-only until the anti-spam tools are ready.\n\n&gt;anyone can create his board/sub\n\nCode is fully open source ",
					"author_fullname": "t2_1xb1hobf3e",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "We are building a fully peer-to-peer selfhosted 4chan alternative using javascript and ipfs, looking for honest review and feed back",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nfid0i",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.71,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 118,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 118,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1757719914.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "github.com",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Right now most boards are whitelist-only until the anti-spam tools are ready.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;anyone can create his board/sub&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Code is fully open source &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://github.com/plebbit/plebchan",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1nfid0i",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "AnarchistBorn",
					"discussion_type": null,
					"num_comments": 56,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nfid0i/we_are_building_a_fully_peertopeer_selfhosted/",
					"stickied": false,
					"url": "https://github.com/plebbit/plebchan",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757719914.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "Hi all\n\nI\u2019ve been working on a project called Envie. It\u2019s an open-source, self-hostable CLI + service that helps manage environment variables, API keys, and other secrets. Think of it as a cleaner alternative to juggling .env files or using dotenv.\n\nThe idea came from a recurring annoyance that I'm sure many JS devs can share: every time I needed to debug something in production, I\u2019d waste time digging through random dashboards or old chat threads just to find the right credentials. Passing around .env files in chat channels was both messy and insecure. I often work with Turborepos with a bunch of sub-projects, apps and packages and its always a mess.\n\nEnvie makes switching between environments much easier. You dont need to have .env files on your disk (those are also a risk with AI tools reading them).\n\nIts written in TypeScript. Contributions and feedback welcome ofc!",
					"author_fullname": "t2_zs7lqonqi",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "I built Envie, a secrets manager and drop-in replacement for .env files and dotenv",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1ng10iq",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.57,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 3,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 3,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1757778861.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "github.com",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi all&lt;/p&gt;\n\n&lt;p&gt;I\u2019ve been working on a project called Envie. It\u2019s an open-source, self-hostable CLI + service that helps manage environment variables, API keys, and other secrets. Think of it as a cleaner alternative to juggling .env files or using dotenv.&lt;/p&gt;\n\n&lt;p&gt;The idea came from a recurring annoyance that I&amp;#39;m sure many JS devs can share: every time I needed to debug something in production, I\u2019d waste time digging through random dashboards or old chat threads just to find the right credentials. Passing around .env files in chat channels was both messy and insecure. I often work with Turborepos with a bunch of sub-projects, apps and packages and its always a mess.&lt;/p&gt;\n\n&lt;p&gt;Envie makes switching between environments much easier. You dont need to have .env files on your disk (those are also a risk with AI tools reading them).&lt;/p&gt;\n\n&lt;p&gt;Its written in TypeScript. Contributions and feedback welcome ofc!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://github.com/ilmari-h/envie",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1ng10iq",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "Fickle-Distance-7031",
					"discussion_type": null,
					"num_comments": 1,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1ng10iq/i_built_envie_a_secrets_manager_and_dropin/",
					"stickied": false,
					"url": "https://github.com/ilmari-h/envie",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757778861.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "Easily accept arbitrarily headered CSV files with this library.\n\nIt allows the user to map their columns to your spec.\n\nIt can then intercept the file on a file input so *your server receives the remapped CSV file*\n\nIncludes transformation, validation, multi-mapping, and more, in a tiny library!\n\nCheck it out:\n\n[https://github.com/manticorp/csv-mapper](https://github.com/manticorp/csv-mapper)\n\nAlso available on npm:\n\n[https://www.npmjs.com/package/@manticorp/csv-mapper](https://www.npmjs.com/package/@manticorp/csv-mapper)",
					"author_fullname": "t2_9gcgv",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "Do you accept CSVs from users? Require exact column names? This is a CSV column mapper for the browser with optional UI, auto-mapping, transforms, and validation.",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1ng0uz7",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.57,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 1,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 1,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1757778491.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "github.com",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Easily accept arbitrarily headered CSV files with this library.&lt;/p&gt;\n\n&lt;p&gt;It allows the user to map their columns to your spec.&lt;/p&gt;\n\n&lt;p&gt;It can then intercept the file on a file input so &lt;em&gt;your server receives the remapped CSV file&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Includes transformation, validation, multi-mapping, and more, in a tiny library!&lt;/p&gt;\n\n&lt;p&gt;Check it out:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/manticorp/csv-mapper\"&gt;https://github.com/manticorp/csv-mapper&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Also available on npm:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.npmjs.com/package/@manticorp/csv-mapper\"&gt;https://www.npmjs.com/package/@manticorp/csv-mapper&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://github.com/manticorp/csv-mapper",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1ng0uz7",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "Manticorp",
					"discussion_type": null,
					"num_comments": 2,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1ng0uz7/do_you_accept_csvs_from_users_require_exact/",
					"stickied": false,
					"url": "https://github.com/manticorp/csv-mapper",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757778491.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "A Non-Disclosure/Non-Compete Policy protects the ideas on that site. I'm looking for people to develop them.",
					"author_fullname": "t2_1famy773vt",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "A Bunch of Ideas",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nger6a",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.1,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 0,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 0,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1757814290.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "ndanca.com",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;A Non-Disclosure/Non-Compete Policy protects the ideas on that site. I&amp;#39;m looking for people to develop them.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "http://www.NdaNca.com",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1nger6a",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "GenoBambino12345",
					"discussion_type": null,
					"num_comments": 5,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nger6a/a_bunch_of_ideas/",
					"stickied": false,
					"url": "http://www.NdaNca.com",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757814290.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "I am trying to build an extension and looking to see if there is a way to make my service worker use functions from the website. I tried doing document.querySelector(\"foo\").bar.doFunction(). It works in my chrome browser at the top level but I cant for the level of me get it to work when the service work does it.",
					"author_fullname": "t2_osjrj7fa8",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "[AskJS] Has anyone out here built an Extension?",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": "AskJS",
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1ng3jvx",
					"quarantine": false,
					"link_flair_text_color": null,
					"upvote_ratio": 0.14,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 0,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": "AskJS",
					"can_mod_post": false,
					"score": 0,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": true,
					"mod_note": null,
					"created": 1757784869.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "self.javascript",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am trying to build an extension and looking to see if there is a way to make my service worker use functions from the website. I tried doing document.querySelector(&amp;quot;foo&amp;quot;).bar.doFunction(). It works in my chrome browser at the top level but I cant for the level of me get it to work when the service work does it.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"view_count": null,
					"archived": false,
					"no_follow": true,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": null,
					"id": "1ng3jvx",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "Rare-Sundae3977",
					"discussion_type": null,
					"num_comments": 6,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1ng3jvx/askjs_has_anyone_out_here_built_an_extension/",
					"stickied": false,
					"url": "https://www.reddit.com/r/javascript/comments/1ng3jvx/askjs_has_anyone_out_here_built_an_extension/",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757784869.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "Hi Everyone\n\nI use next js, Svelte a lot in my work\n\nBut somehow I noticed they are laggy, many users reporting slowness/lagging especially in older browsers and also in firefox/edge\n\nOn SEO side, I got lot of issues with Bing and Yandex they cannot crawl them well.\n\n2 days ago I got a project assigned and was forced to use Adonis JS which has the Edge JS templating.\n\nI did used express, sailsJs, the old good Meteor JS in the past so I do know to work with MVS frameworks\n\nI started working on it and using the Edge JS templating, I was pretty amazed on how fast it was ! Working on it was real fun, since I mostly used CSS (was using tailwind 4 before), I also didn't know I can split codes into components and use section, layout similiar to react/next props\n\nWas doing also native javascript for functions etc \n\nI'm pretty amazed, it remembred me of the old good days of JQuery\n\nI really think old is gold, after my tests noticed the website was super fast, old browsers compatible, no lagging nothing, and also a lot less codes and work is more organized due the MVC pattern\n\nWhat do you think ? \n\nWhy are next js, svelte, react and so more are gaining like 90% compared to great frameworks like express adonis koa sails and so on ?\n\nI see also many newer framework that really isn't a pleasure to work with especially Nuxt (full of bugs) Next, Alpine, Remix (even worse), Astro/Qwik (a framework for framework ??) \n\nPersonally I believe the evolution of the internet (and money) pushed those framework to brightlight even personally in my own opinion I think they are causing more problems then they should fix\n\nBack to years Ago, the golden age of PHP, we was loading websites with just a Model, 512Kb/s and everything was fast\n\nI remember I had a pentium 3, 512Mb RAM PC with internet Explorer everything was fine \n\nNowdays even with high end GPU, CPU 16GB RAM and website feels slows and CPU start spinning like crazy on some react website",
					"author_fullname": "t2_12l3lzfzgu",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "[AskJS] Used Adonis JS instead of Next/Svelte - I love it",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": "AskJS",
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nfxxmi",
					"quarantine": false,
					"link_flair_text_color": null,
					"upvote_ratio": 0.42,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 0,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": "AskJS",
					"can_mod_post": false,
					"score": 0,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": true,
					"mod_note": null,
					"created": 1757771242.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "self.javascript",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi Everyone&lt;/p&gt;\n\n&lt;p&gt;I use next js, Svelte a lot in my work&lt;/p&gt;\n\n&lt;p&gt;But somehow I noticed they are laggy, many users reporting slowness/lagging especially in older browsers and also in firefox/edge&lt;/p&gt;\n\n&lt;p&gt;On SEO side, I got lot of issues with Bing and Yandex they cannot crawl them well.&lt;/p&gt;\n\n&lt;p&gt;2 days ago I got a project assigned and was forced to use Adonis JS which has the Edge JS templating.&lt;/p&gt;\n\n&lt;p&gt;I did used express, sailsJs, the old good Meteor JS in the past so I do know to work with MVS frameworks&lt;/p&gt;\n\n&lt;p&gt;I started working on it and using the Edge JS templating, I was pretty amazed on how fast it was ! Working on it was real fun, since I mostly used CSS (was using tailwind 4 before), I also didn&amp;#39;t know I can split codes into components and use section, layout similiar to react/next props&lt;/p&gt;\n\n&lt;p&gt;Was doing also native javascript for functions etc &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m pretty amazed, it remembred me of the old good days of JQuery&lt;/p&gt;\n\n&lt;p&gt;I really think old is gold, after my tests noticed the website was super fast, old browsers compatible, no lagging nothing, and also a lot less codes and work is more organized due the MVC pattern&lt;/p&gt;\n\n&lt;p&gt;What do you think ? &lt;/p&gt;\n\n&lt;p&gt;Why are next js, svelte, react and so more are gaining like 90% compared to great frameworks like express adonis koa sails and so on ?&lt;/p&gt;\n\n&lt;p&gt;I see also many newer framework that really isn&amp;#39;t a pleasure to work with especially Nuxt (full of bugs) Next, Alpine, Remix (even worse), Astro/Qwik (a framework for framework ??) &lt;/p&gt;\n\n&lt;p&gt;Personally I believe the evolution of the internet (and money) pushed those framework to brightlight even personally in my own opinion I think they are causing more problems then they should fix&lt;/p&gt;\n\n&lt;p&gt;Back to years Ago, the golden age of PHP, we was loading websites with just a Model, 512Kb/s and everything was fast&lt;/p&gt;\n\n&lt;p&gt;I remember I had a pentium 3, 512Mb RAM PC with internet Explorer everything was fine &lt;/p&gt;\n\n&lt;p&gt;Nowdays even with high end GPU, CPU 16GB RAM and website feels slows and CPU start spinning like crazy on some react website&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"view_count": null,
					"archived": false,
					"no_follow": true,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": null,
					"id": "1nfxxmi",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "Icy-Mix5409",
					"discussion_type": null,
					"num_comments": 8,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nfxxmi/askjs_used_adonis_js_instead_of_nextsvelte_i_love/",
					"stickied": false,
					"url": "https://www.reddit.com/r/javascript/comments/1nfxxmi/askjs_used_adonis_js_instead_of_nextsvelte_i_love/",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757771242.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "Airbnb packages are not updating to ESLint 9 and typescript package is archived so I decided to create the package called **eslint-config-airbnb-extended** after no choice.\n\nGithub: [https://github.com/NishargShah/eslint-config-airbnb-extended](https://github.com/NishargShah/eslint-config-airbnb-extended)\n\nNPM (25k+/Weekly) : [https://www.npmjs.com/package/eslint-config-airbnb-extended](https://www.npmjs.com/package/eslint-config-airbnb-extended)\n\nReason behind it is\n\n1. It hasn\u2019t been updated in 3+ years\n2. It doesn\u2019t support well with ESLint v9\n3. Major reason is TypeScript and it is archived now\n\nNow what it supports\n\n1. Flat Config out of the box\n2. Full TypeScript Support\n3. Setup with CLI ( You dont need to write it by yourself )\n4. Latest Plugins with **stylistic** support\n5. Has legacy version which is totally drop in replacement of the old packages\n6. Also added strict rules for the team who wants to go with stricter version\n\nMy package also promoted by the creator of ESLint ( **Nicholas C. Zakas** ) in Twitter. Also it has good stars in GitHub. Recently, I have created the documentation of it.\n\nHave a look and let me know if there are any other things needed",
					"author_fullname": "t2_4dp9l4dz",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "ESLint Airbnb Extended - Alternative of Eslint Config Airbnb ( Base + React + Typescript )",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nfftwm",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.67,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 4,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 4,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1757713421.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "eslint-airbnb-extended.nishargshah.dev",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Airbnb packages are not updating to ESLint 9 and typescript package is archived so I decided to create the package called &lt;strong&gt;eslint-config-airbnb-extended&lt;/strong&gt; after no choice.&lt;/p&gt;\n\n&lt;p&gt;Github: &lt;a href=\"https://github.com/NishargShah/eslint-config-airbnb-extended\"&gt;https://github.com/NishargShah/eslint-config-airbnb-extended&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;NPM (25k+/Weekly) : &lt;a href=\"https://www.npmjs.com/package/eslint-config-airbnb-extended\"&gt;https://www.npmjs.com/package/eslint-config-airbnb-extended&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Reason behind it is&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;It hasn\u2019t been updated in 3+ years&lt;/li&gt;\n&lt;li&gt;It doesn\u2019t support well with ESLint v9&lt;/li&gt;\n&lt;li&gt;Major reason is TypeScript and it is archived now&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Now what it supports&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Flat Config out of the box&lt;/li&gt;\n&lt;li&gt;Full TypeScript Support&lt;/li&gt;\n&lt;li&gt;Setup with CLI ( You dont need to write it by yourself )&lt;/li&gt;\n&lt;li&gt;Latest Plugins with &lt;strong&gt;stylistic&lt;/strong&gt; support&lt;/li&gt;\n&lt;li&gt;Has legacy version which is totally drop in replacement of the old packages&lt;/li&gt;\n&lt;li&gt;Also added strict rules for the team who wants to go with stricter version&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;My package also promoted by the creator of ESLint ( &lt;strong&gt;Nicholas C. Zakas&lt;/strong&gt; ) in Twitter. Also it has good stars in GitHub. Recently, I have created the documentation of it.&lt;/p&gt;\n\n&lt;p&gt;Have a look and let me know if there are any other things needed&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://eslint-airbnb-extended.nishargshah.dev",
					"view_count": null,
					"archived": false,
					"no_follow": true,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1nfftwm",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "NishargShah",
					"discussion_type": null,
					"num_comments": 0,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nfftwm/eslint_airbnb_extended_alternative_of_eslint/",
					"stickied": false,
					"url": "https://eslint-airbnb-extended.nishargshah.dev",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757713421.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "Hi everyone,\n\nAfter a good amount of work, I'm excited to share a project I just launched: **YT Marker**.\n\nAs a developer, I learn a ton from YouTube, but I found the process of saving and organizing key information really inefficient. To solve this, I built a Chrome extension from scratch with **vanilla JavaScript (Manifest V3)**.\n\nThe core of the app is a Freemium model with a local-first approach using `chrome.storage.local`. For Premium users, it syncs in real-time with **Firestore** and handles payments via **Stripe** through Firebase Cloud Functions.\n\nI recently launched it and would love to get feedback from fellow web developers on the tech, the UX, or any bugs you might find!\n\n* **Chrome Web Store:** https://chromewebstore.google.com/detail/yt-marker-youtube-timesta/aefdjejbkmjhdocmbmimijdaeampdcjk\n\nThanks for checking it out!",
					"author_fullname": "t2_5kkg6cmm",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "I built YT Marker, a Chrome Extension that turns YouTube into a knowledge base.",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nfxthh",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.25,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 0,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 0,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1757770927.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "chromewebstore.google.com",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi everyone,&lt;/p&gt;\n\n&lt;p&gt;After a good amount of work, I&amp;#39;m excited to share a project I just launched: &lt;strong&gt;YT Marker&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;As a developer, I learn a ton from YouTube, but I found the process of saving and organizing key information really inefficient. To solve this, I built a Chrome extension from scratch with &lt;strong&gt;vanilla JavaScript (Manifest V3)&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;The core of the app is a Freemium model with a local-first approach using &lt;code&gt;chrome.storage.local&lt;/code&gt;. For Premium users, it syncs in real-time with &lt;strong&gt;Firestore&lt;/strong&gt; and handles payments via &lt;strong&gt;Stripe&lt;/strong&gt; through Firebase Cloud Functions.&lt;/p&gt;\n\n&lt;p&gt;I recently launched it and would love to get feedback from fellow web developers on the tech, the UX, or any bugs you might find!&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Chrome Web Store:&lt;/strong&gt; &lt;a href=\"https://chromewebstore.google.com/detail/yt-marker-youtube-timesta/aefdjejbkmjhdocmbmimijdaeampdcjk\"&gt;https://chromewebstore.google.com/detail/yt-marker-youtube-timesta/aefdjejbkmjhdocmbmimijdaeampdcjk&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Thanks for checking it out!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://chromewebstore.google.com/detail/yt-marker-youtube-timesta/aefdjejbkmjhdocmbmimijdaeampdcjk",
					"view_count": null,
					"archived": false,
					"no_follow": true,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1nfxthh",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "Creepy_Constant3582",
					"discussion_type": null,
					"num_comments": 0,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nfxthh/i_built_yt_marker_a_chrome_extension_that_turns/",
					"stickied": false,
					"url": "https://chromewebstore.google.com/detail/yt-marker-youtube-timesta/aefdjejbkmjhdocmbmimijdaeampdcjk",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757770927.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "If you did, why for god's sake?",
					"author_fullname": "t2_p0spgq2",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "[AskJS] Has anyone written any code that will break if `typeof null` didn't evaluate to \"object\"?",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": "AskJS",
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nfv4jw",
					"quarantine": false,
					"link_flair_text_color": null,
					"upvote_ratio": 0.4,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 0,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": "AskJS",
					"can_mod_post": false,
					"score": 0,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": true,
					"mod_note": null,
					"created": 1757762942.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "self.javascript",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If you did, why for god&amp;#39;s sake?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"view_count": null,
					"archived": false,
					"no_follow": true,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": null,
					"id": "1nfv4jw",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "tech_ai_man",
					"discussion_type": null,
					"num_comments": 13,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nfv4jw/askjs_has_anyone_written_any_code_that_will_break/",
					"stickied": false,
					"url": "https://www.reddit.com/r/javascript/comments/1nfv4jw/askjs_has_anyone_written_any_code_that_will_break/",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757762942.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			},
			{
				"kind": "t3",
				"data": {
					"approved_at_utc": null,
					"subreddit": "javascript",
					"selftext": "Hi all,\n\nI just released a simple open-source test planner I've been working on.\n\nSome features are still in progress, but I\u2019d love to hear your feedback.\n\nIt\u2019s designed for small teams and orgs, with a focus on simplicity and ease of use. The motivation behind building this was that, at my current workplace, we still don\u2019t have a well-organized way to document manual testing. I really wanted a toolkit for managing tests, such as Azure Test Plans, which I used at my previous job.\n\nFeel free to check out the demo site below and I hope someone finds it useful in real-world workflows!\n\nDemo site login:  \nusername: kingyo-demo  \npassword: guest1234!\n\n[Demo](https://kingyo-demo.pages.dev/)  \n[Github](https://github.com/spider-hand/kingyo)",
					"author_fullname": "t2_zpcmlypt9",
					"saved": false,
					"mod_reason_title": null,
					"gilded": 0,
					"clicked": false,
					"title": "Built a simple, open-source test planner your team can start using today",
					"link_flair_richtext": [],
					"subreddit_name_prefixed": "r/javascript",
					"hidden": false,
					"pwls": 6,
					"link_flair_css_class": null,
					"downs": 0,
					"top_awarded_type": null,
					"hide_score": false,
					"name": "t3_1nfe3vj",
					"quarantine": false,
					"link_flair_text_color": "dark",
					"upvote_ratio": 0.67,
					"author_flair_background_color": null,
					"subreddit_type": "public",
					"ups": 3,
					"total_awards_received": 0,
					"media_embed": {},
					"author_flair_template_id": null,
					"is_original_content": false,
					"user_reports": [],
					"secure_media": null,
					"is_reddit_media_domain": false,
					"is_meta": false,
					"category": null,
					"secure_media_embed": {},
					"link_flair_text": null,
					"can_mod_post": false,
					"score": 3,
					"approved_by": null,
					"is_created_from_ads_ui": false,
					"author_premium": false,
					"thumbnail": "",
					"edited": false,
					"author_flair_css_class": null,
					"author_flair_richtext": [],
					"gildings": {},
					"content_categories": null,
					"is_self": false,
					"mod_note": null,
					"created": 1757709351.0,
					"link_flair_type": "text",
					"wls": 6,
					"removed_by_category": null,
					"banned_by": null,
					"author_flair_type": "text",
					"domain": "kingyo-demo.pages.dev",
					"allow_live_comments": false,
					"selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi all,&lt;/p&gt;\n\n&lt;p&gt;I just released a simple open-source test planner I&amp;#39;ve been working on.&lt;/p&gt;\n\n&lt;p&gt;Some features are still in progress, but I\u2019d love to hear your feedback.&lt;/p&gt;\n\n&lt;p&gt;It\u2019s designed for small teams and orgs, with a focus on simplicity and ease of use. The motivation behind building this was that, at my current workplace, we still don\u2019t have a well-organized way to document manual testing. I really wanted a toolkit for managing tests, such as Azure Test Plans, which I used at my previous job.&lt;/p&gt;\n\n&lt;p&gt;Feel free to check out the demo site below and I hope someone finds it useful in real-world workflows!&lt;/p&gt;\n\n&lt;p&gt;Demo site login:&lt;br/&gt;\nusername: kingyo-demo&lt;br/&gt;\npassword: guest1234!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://kingyo-demo.pages.dev/\"&gt;Demo&lt;/a&gt;&lt;br/&gt;\n&lt;a href=\"https://github.com/spider-hand/kingyo\"&gt;Github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
					"likes": null,
					"suggested_sort": null,
					"banned_at_utc": null,
					"url_overridden_by_dest": "https://kingyo-demo.pages.dev",
					"view_count": null,
					"archived": false,
					"no_follow": false,
					"is_crosspostable": true,
					"pinned": false,
					"over_18": false,
					"all_awardings": [],
					"awarders": [],
					"media_only": false,
					"can_gild": false,
					"spoiler": false,
					"locked": false,
					"author_flair_text": null,
					"treatment_tags": [],
					"visited": false,
					"removed_by": null,
					"num_reports": null,
					"distinguished": null,
					"subreddit_id": "t5_2qh30",
					"author_is_blocked": false,
					"mod_reason_by": null,
					"removal_reason": null,
					"link_flair_background_color": "",
					"id": "1nfe3vj",
					"is_robot_indexable": true,
					"report_reasons": null,
					"author": "itsspiderhand",
					"discussion_type": null,
					"num_comments": 3,
					"send_replies": true,
					"contest_mode": false,
					"mod_reports": [],
					"author_patreon_flair": false,
					"author_flair_text_color": null,
					"permalink": "/r/javascript/comments/1nfe3vj/built_a_simple_opensource_test_planner_your_team/",
					"stickied": false,
					"url": "https://kingyo-demo.pages.dev",
					"subreddit_subscribers": 2408514,
					"created_utc": 1757709351.0,
					"num_crossposts": 0,
					"media": null,
					"is_video": false
				}
			}
		],
		"before": null
	}
}
